[tool.poetry]
name = "Form Builder"
version = "0.1.0"
description = ""
authors = []

[tool.poetry.dependencies]
python = "^3.11"
dependency-injector = "4.41.0"
fastapi = "0.112.0"
fastapi-versioning = "0.10.0"
pydantic = "2.8.2"
uvicorn = "0.30.5"
json-log-formatter = "1.0"
concurrent-log-handler = "0.9.25"
motor = "3.6.0"

[tool.poetry.group.dev.dependencies]
mypy = "1.10.0"
flake8 = "7.1.0"
black = "24.4.2"
pre-commit = "3.7.1"
isort = "5.13.2"

[tool.poetry.group.lint.dependencies]
flake8 = "7.1.0"

[tool.poetry.group.analyze.dependencies]
mypy = "1.10.0"

[tool.pytest.ini_options]
python_files = "test_*.py"
addopts = [
    "-v",
    "-rfxP",
    "--cov",
    "--log-level=CRITICAL",
]

[tool.coverage.report]
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]
omit = [
    "*conftest.py",
    "*apps.py",
    "*urls.py",
    "*schema.py",
    "*interfaces.py",
    "*utils/logging.py",
    "*utils/exceptions.py",
    "*__init__*",
    "*/config/*",
    "*/tests/*",
]

[tool.black]
exclude = '''
    migrations
    | .venv
'''

[tool.isort]
profile = "black"
skip_glob = ["di/*"]

[tool.mypy]
python_version = 3.11
exclude = [
    "migrations",
    "views",
    "tests",
    "utils\\.py",
    "schema\\.py",
    "apps\\.py",
    "tests\\.py",
    "di\\.py",
]
ignore_missing_imports = true
disable_error_code = "import-untyped"
follow_imports = "skip"
plugins = [
    
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
